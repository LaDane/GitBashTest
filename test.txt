[alias]        
        st = status
        cout = checkout
        com = commit
        br = branch
        df = diff
        dfs = diff --staged
        logg = log --graph --decorate --oneline --abbrev-commit --all
        acm = !git add . && git commit -m


usaw@LAPTOP-62JLOGHS MINGW64 ~
$ mkdir test

usaw@LAPTOP-62JLOGHS MINGW64 ~
$ cd test

usaw@LAPTOP-62JLOGHS MINGW64 ~/test
$ git init
Initialized empty Git repository in C:/Users/usaw/test/.git/

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git logg

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git st
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git st
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test.txt

nothing added to commit but untracked files present (use "git add" to track)

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git add.test
git: 'add.test' is not a git command. See 'git --help'.

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git add .

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git st
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   test.txt


usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git com
[master (root-commit) a6e527c] Test commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test.txt

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git st
On branch master
nothing to commit, working tree clean

usaw@LAPTOP-62JLOGHS MINGW64 ~/test (master)
$ git logg
* a6e527c (HEAD -> master) Test commit



WHEN COMMITING
press "i" (i for insert)
write your merge message
press "esc" (escape)
write ":wq" (write & quit)
then press enter


Or another way
commit -m "Commit message"
